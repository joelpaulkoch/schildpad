//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: lib/installed_apps/proto/installed_apps.proto

package app.schildpad.schildpad.protos;

@kotlin.jvm.JvmName("-initializeapp")
inline fun app(block: app.schildpad.schildpad.protos.AppKt.Dsl.() -> kotlin.Unit): app.schildpad.schildpad.protos.App =
    app.schildpad.schildpad.protos.AppKt.Dsl._create(app.schildpad.schildpad.protos.App.newBuilder()).apply { block() }
        ._build()
object AppKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    class Dsl private constructor(
        private val _builder: app.schildpad.schildpad.protos.App.Builder
    ) {
        companion object {
            @kotlin.jvm.JvmSynthetic
            @kotlin.PublishedApi
            internal fun _create(builder: app.schildpad.schildpad.protos.App.Builder): Dsl = Dsl(builder)
        }

        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _build(): app.schildpad.schildpad.protos.App = _builder.build()

        /**
         * <code>string name = 1;</code>
         */
        var name: kotlin.String
            @JvmName("getName")
            get() = _builder.getName()
            @JvmName("setName")
            set(value) {
                _builder.setName(value)
            }

        /**
         * <code>string name = 1;</code>
         */
        fun clearName() {
            _builder.clearName()
        }

        /**
         * <code>string packageName = 2;</code>
         */
        var packageName: kotlin.String
            @JvmName("getPackageName")
            get() = _builder.getPackageName()
            @JvmName("setPackageName")
            set(value) {
                _builder.setPackageName(value)
            }

        /**
         * <code>string packageName = 2;</code>
         */
        fun clearPackageName() {
            _builder.clearPackageName()
        }

        /**
         * <code>.schildpad.App.DrawableData icon = 3;</code>
         */
        var icon: app.schildpad.schildpad.protos.App.DrawableData
            @JvmName("getIcon")
            get() = _builder.getIcon()
            @JvmName("setIcon")
            set(value) {
                _builder.setIcon(value)
            }

        /**
         * <code>.schildpad.App.DrawableData icon = 3;</code>
         */
        fun clearIcon() {
            _builder.clearIcon()
        }

        /**
         * <code>.schildpad.App.DrawableData icon = 3;</code>
         * @return Whether the icon field is set.
         */
        fun hasIcon(): kotlin.Boolean {
            return _builder.hasIcon()
        }

        /**
         * <code>string launchComponent = 4;</code>
         */
        var launchComponent: kotlin.String
            @JvmName("getLaunchComponent")
            get() = _builder.getLaunchComponent()
            @JvmName("setLaunchComponent")
            set(value) {
                _builder.setLaunchComponent(value)
            }

        /**
         * <code>string launchComponent = 4;</code>
         */
        fun clearLaunchComponent() {
            _builder.clearLaunchComponent()
        }
    }

    @kotlin.jvm.JvmName("-initializedrawableData")
    inline fun drawableData(block: app.schildpad.schildpad.protos.AppKt.DrawableDataKt.Dsl.() -> kotlin.Unit): app.schildpad.schildpad.protos.App.DrawableData =
        app.schildpad.schildpad.protos.AppKt.DrawableDataKt.Dsl._create(app.schildpad.schildpad.protos.App.DrawableData.newBuilder())
            .apply { block() }._build()

    object DrawableDataKt {
        @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
        @com.google.protobuf.kotlin.ProtoDslMarker
        class Dsl private constructor(
            private val _builder: app.schildpad.schildpad.protos.App.DrawableData.Builder
        ) {
            companion object {
                @kotlin.jvm.JvmSynthetic
                @kotlin.PublishedApi
                internal fun _create(builder: app.schildpad.schildpad.protos.App.DrawableData.Builder): Dsl =
                    Dsl(builder)
            }

            @kotlin.jvm.JvmSynthetic
            @kotlin.PublishedApi
            internal fun _build(): app.schildpad.schildpad.protos.App.DrawableData = _builder.build()

            /**
             * <code>bytes data = 1;</code>
             */
            var data: com.google.protobuf.ByteString
                @JvmName("getData")
                get() = _builder.getData()
                @JvmName("setData")
                set(value) {
                    _builder.setData(value)
                }

            /**
             * <code>bytes data = 1;</code>
             */
            fun clearData() {
                _builder.clearData()
            }
        }
    }
}
@kotlin.jvm.JvmSynthetic
inline fun app.schildpad.schildpad.protos.App.copy(block: app.schildpad.schildpad.protos.AppKt.Dsl.() -> kotlin.Unit): app.schildpad.schildpad.protos.App =
    app.schildpad.schildpad.protos.AppKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
inline fun app.schildpad.schildpad.protos.App.DrawableData.copy(block: app.schildpad.schildpad.protos.AppKt.DrawableDataKt.Dsl.() -> kotlin.Unit): app.schildpad.schildpad.protos.App.DrawableData =
    app.schildpad.schildpad.protos.AppKt.DrawableDataKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val app.schildpad.schildpad.protos.AppOrBuilder.iconOrNull: app.schildpad.schildpad.protos.App.DrawableData?
    get() = if (hasIcon()) getIcon() else null

